extend type Query {
    proposal: ProposalQuery!
}
extend type Mutation {
    proposal: ProposalMutation!
}
type ProposalQuery {
    allProposals: [ProposalType!]!
    proposalById(id: String!): ProposalType!
}
type ProposalMutation {
    addProposal(data: ProposalInput!): Boolean
    deleteProposal(id: String!): Boolean
    updateProposal(id: String!, data: ProposalInput): Boolean
}

type ProposalType {
    id: String
    proposal_id: Int
    createTime: String!
    changeTime: String!
    status: Int!
    clientId: String!
    carId: String!
    userId: String
    proposalReason: String
    technicalInspectionResult: String
    recomendedWork: [String]
    completedWork: JSON
    key: String
}

input ProposalInput {
    createTime: String!
    changeTime: String!
    status: Int!
    clientId: String!
    carId: String!
    userId: String!
    proposalReason: String
    technicalInspectionResult: String
    recomendedWork: [String]
    completedWork: JSON
}
